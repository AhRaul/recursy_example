"""Методы простой рекурсии"""

def countdown_infinity(i):
    """Метод бесконечной рекурсии, отсутствует условие завершения работы метода."""
    print(i)            #Вывод значения
    countdown_infinity(i-1)  #Метод вызывает сам себя

def countdown(i):
    """
    Метод рекурсии, который имеет условие завершения, в виде базового случая,
    при котором метод не вызывает сам себя (в отличие от рекурсивного случая).
    """
    print(i)        #Вывод в консоль обратного отсчета, начиная с аргумента
    if i <= 1:  #Базовый случай, при выполнении которого, работа метода завершается.
                    #В данном случае, вызов завершается ,при получении значения, меньше 1.
        return
    else:       #Рекурсивный случай, при котором, метод вновь вызывает сам себя.
        countdown(i-1)  #Рекурсия. Декремент с повторным выводом аргумента.


def fact(x):
    """
    Рекурсивный метод поиска факториала,
    демонстрирующий стековую последовательность вызовов рекурсии, в действии.
    """
    if x == 1:  #Вначале, программа заполнит стек, пока не спустится до единицы.
                    #Затем отработает поочереди стек,
                    # начиная с последнего положенного в него значения
                    # (т.е. начиная с 1).

        return 1    #Особенность этого возврата в том,
                    # что он вернется первым, а не последним, как может показаться.
                    # Иначе, метод всегда возвращал бы результат, равный 1.
                    # Вместо этого, 1 будет сложена в стопку стека сверху,
                    # и затем, взята первой.
    else:
        return x *fact(x-1)     #Соответственно, return отработает последний шаг
                                # при x = 5 (если аргументом, изначально, будет цифра 5)
                                # и вернет return 120.

print(str(fact(5)))
